services:
  # Gateway 앱 서비스 정의 (기존 코드)
  event-app:
      build:
        context: .
        dockerfile: ./apps/event-app/Dockerfile
        target: development # 개발 모드 빌드 사용
      # NestJS CLI 모노레포 앱 시작 명령어
      command: npm run start:dev event-app
      # event-app의 환경 변수 파일 사용
      env_file:
        # event-app에 필요한 환경 변수 (JWT_SECRET, Microservice HOST/PORT) 포함
        - ./.env.development
      # MongoDB 서비스에 의존 (필요하다면)
      # depends_on:
      #  - mongo
      # 개발 중 코드 변경 감지를 위한 볼륨 마운트
      volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules # 호스트 node_modules가 컨테이너를 덮어쓰지 않도록 설정
      # 외부에서 Gateway에 접근하기 위한 포트 포워딩
      ports:
        - '3000:3000'

  # Auth 앱 Microservice 서비스 정의
  auth:
      build:
        context: .
        dockerfile: ./apps/auth/Dockerfile
        target: development
      # NestJS CLI 모노레포 앱 시작 명령어
      command: npm run start:dev auth # <-- 'auth' 앱 시작 명령어로 수정
      # Auth 앱의 환경 변수 파일 사용
      env_file:
        # Auth 앱에 필요한 환경 변수 (MONGODB_URI, JWT_SECRET, Microservice PORT) 포함
        - ./.env.development
      # DB 서비스에 의존 (Auth 서비스는 DB 연결 전에 Mongo가 시작되도록)
      depends_on:
        - mongo
      # 개발 중 코드 변경 감지를 위한 볼륨 마운트
      volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules

      # Auth 마이크로서비스가 리스닝하는 내부 포트 노출 (Gateway 앱이 이 포트로 접근)
      # Auth 앱의 main.ts에서 설정된 포트와 일치해야 합니다. (예: 3001)
      expose:
        - '3001'
      # 개발/디버깅 목적으로 호스트에서도 접근하려면 ports를 추가 (필수는 아님)
      # ports:
      #   - '3001:3001'

  # Event 앱 Microservice 서비스 정의
  event:
      build:
        context: .
        dockerfile: ./apps/event/Dockerfile
        target: development
      # NestJS CLI 모노레포 앱 시작 명령어
      command: npm run start:dev event # <-- 'event' 앱 시작 명령어로 수정
      # Event 앱의 환경 변수 파일 사용
      env_file:
        # Event 앱에 필요한 환경 변수 (MONGODB_URI, JWT_SECRET, Microservice PORT) 포함
        - ./.env.development # Auth와 동일한 env 파일을 사용하거나 분리된 env 파일을 사용할 수 있습니다.

      # Event 서비스는 DB에 의존할 것입니다.
      depends_on:
        - mongo
      # 개발 중 코드 변경 감지를 위한 볼륨 마운트
      volumes:
        - .:/usr/src/app
        - /usr/src/app/node_modules

      # Event 마이크로서비스가 리스닝하는 내부 포트 노출 (Gateway 앱이 이 포트로 접근)
      # Event 앱의 main.ts에서 설정된 포트와 일치해야 합니다. (예: 3002)
      expose:
        - '3002' # 예시: Auth와 다른 포트 (3002) 사용
      # 개발/디버깅 목적으로 호스트에서도 접근하려면 ports를 추가 (필수는 아님)
      # ports:
      #   - '3002:3002'

  # MongoDB 단일 서비스 정의 (기존 코드)
  mongo:
    image: mongo:latest
    container_name: event_back_mongo_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}

# Docker Volume 정의 (MongoDB 데이터 저장용)
volumes:
  mongo_data:
    driver: local